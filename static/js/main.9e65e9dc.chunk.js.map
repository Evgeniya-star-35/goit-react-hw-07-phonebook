{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/filter-reducer.js","redux/Phonebook/phonebook-operations.js","redux/Phonebook/phonebook-reduser.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","changeFilter","createAction","filterReducer","createReducer","_","action","payload","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","console","log","message","addContact","contact","post","deleteContact","contactId","delete","id","contactsSlice","createSlice","name","initialState","contactItems","loading","error","extraReducers","fulfilled","state","pending","rejected","isLoading","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBook","devTools","process","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","lowerCasedFilter","toLowerCase","includes","Form","useState","setName","phone","setPhone","contacts","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","currentTarget","Contact","number","propType","PropTypes","string","isRequired","ContactsList","useEffect","map","item","onClick","App","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e65e9dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1Obk-\",\"value\":\"Filter_value__24yaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__2hTXa\",\"number\":\"Contact_number__3hNFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2AFkj\",\"button\":\"ContactsList_button__13Nw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2sPC8\",\"contactTitle\":\"App_contactTitle__1oZu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__17Yx5\"};","// import { v4 as uuidv4 } from 'uuid';\r\n\r\n//reduxjs/toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/add');\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { changeFilter } from '../Phonebook/phonebook-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://618fa5fff6bf450017484991.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async contact => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n);\r\n","// import { createReducer } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n// import { combineReducers } from 'redux';\r\n// import { changeFilter } from './phonebook-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './phonebook-operations';\r\n\r\n// const initialState = {\r\n//   contacts: [],\r\n//   filter: '',\r\n//   loading: false,\r\n// };\r\n\r\n// const contactItems = createReducer(initialState.contacts, {\r\n//   [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n//   [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n//   [deleteContact.fulfilled]: (state, { payload }) =>\r\n//     state.filter(({ id }) => id !== payload),\r\n// });\r\n\r\n// const loading = createReducer(initialState.loading, {\r\n//   [fetchContacts.pending]: () => true,\r\n//   [fetchContacts.fulfilled]: () => false,\r\n//   [fetchContacts.rejected]: () => false,\r\n\r\n//   [addContact.pending]: () => true,\r\n//   [addContact.fulfilled]: () => false,\r\n//   [addContact.rejected]: () => false,\r\n\r\n//   [deleteContact.pending]: () => true,\r\n//   [deleteContact.fulfilled]: () => false,\r\n//   [deleteContact.rejected]: () => false,\r\n// });\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: { contactItems: [], loading: false, error: null },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: action.payload,\r\n      loading: false,\r\n    }),\r\n    [fetchContacts.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    [fetchContacts.rejected]: state => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n\r\n    [addContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: [...state.contactItems, action.payload],\r\n      isLoading: false,\r\n    }),\r\n    [addContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    [addContact.rejected]: state => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n\r\n    [deleteContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: state.contactItems.filter(\r\n        ({ id }) => id !== action.payload,\r\n      ),\r\n      loading: false,\r\n    }),\r\n    [deleteContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    [deleteContact.rejected]: state => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n  },\r\n});\r\n// const filter = createReducer('', {\r\n//   [changeFilter]: (_, { payload }) => payload,\r\n// });\r\nexport default contactsSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { filterReducer } from './Phonebook/filter-reducer';\r\nimport contactsSlice from './Phonebook/phonebook-reduser';\r\n// import phoneBookReducer from './Phonebook/phonebook-reduser';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: contactsSlice,\r\n    filter: filterReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","export const getContacts = state => state.phoneBook.contactItems;\r\nexport const getFilter = state => state.filter;\r\n// export const getLoading = state => state.phoneBook.loading;\r\nexport const getFiltredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};\r\n","import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    // const contact = {\n    //   id: uuidv4(),\n    //   name,\n    //   number,\n    // };\n    dispatch(addContact({ name, phone }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={phone}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, phone, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={phone} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// import { connect } from 'react-redux';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n// import actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state,\n//   };\n// };\n// const mapDispatchToProps = dispatch => ({\n//   addNote: text => dispatch(actions.addContact(text)),\n// });\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n// import store from './redux/store';\r\n// import { store, persistor } from './redux/store';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DA4Qu\",\"label\":\"Form_label__1kOjS\",\"input\":\"Form_input__1HyLK\",\"button\":\"Form_button__3SYCO\",\"btnText\":\"Form_btnText__Vt8Hc\"};"],"sourceRoot":""}