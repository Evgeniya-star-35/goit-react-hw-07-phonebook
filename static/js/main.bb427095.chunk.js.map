{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","components/Form/Form.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reduser.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","redux/Phonebook/phonebook-operations.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","actions","deleteContactError","changeFilter","contactItems","createReducer","initialContacts","addContact","state","payload","deleteContact","filter","id","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","lowerCasedFilter","toLowerCase","name","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","currentTarget","Contact","propType","PropTypes","string","isRequired","axios","defaults","baseURL","ContactsList","map","item","onClick","delete","then","catch","error","console","log","get","response","data","App","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,0B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,+B,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,aAAe,4B,uSCA5DD,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,qBAAqB,QAAU,wB,oICItIC,EAAsBC,YAAa,yBACnCC,EAAsBD,YAAa,yBACnCE,EAAoBF,YAAa,uBAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAS/BM,EAAuBN,YAAa,0BACpCO,EAAuBP,YAAa,0BAoB3BQ,EAbC,CACdT,sBACAE,sBACAC,oBACAG,kBACAF,oBACAC,oBACAK,mBAbyBT,YAAa,wBActCO,uBACAD,uBACAI,aAZmBV,YAAa,0B,QCS5BW,EAAeC,YAAcC,GAAD,mBAC/BL,EAAQM,YAAa,SAACC,EAAD,OAAUC,EAAV,EAAUA,QAAV,4BAA4BD,GAA5B,CAAmCC,OADzB,cAE/BR,EAAQS,eAAgB,SAACF,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACvBD,EAAMG,QAAO,qBAAGC,KAAgBH,QAHF,IAM5BE,EAASN,YAAc,GAAD,eACzBJ,EAAQE,cAAe,SAACU,EAAD,YAAMJ,YAGjBK,cAAgB,CAAEV,eAAcO,WCnBzCI,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAYaC,EATMC,YAAe,CAClCC,QAAS,CACPC,SAAUC,GAEZC,UAAUC,EACVjB,e,uCCtCa,SAASkB,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,YCH1BI,EAAc,SAAA9B,GAAK,OAAIA,EAAMqB,SAASzB,cACtCmC,EAAY,SAAA/B,GAAK,OAAIA,EAAMqB,SAASlB,QACpC6B,EAAqB,SAAAhC,GAChC,IAAMiC,EAAmBF,EAAU/B,GAAOkC,cAI1C,OAHyBJ,EAAY9B,GAAOG,QAAO,qBAAGgC,KAC/CD,cAAcE,SAASH,O,gBCEjB,SAASI,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMpB,EAAWqB,YAAYZ,GACvBa,EAAWC,cAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,OAAQb,GACN,IAAK,OACHI,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,SAiBAC,EAAQ,WACZV,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMd,UAAWC,IAAEsB,KAAMC,SAnBN,SAAAL,GAKnB,GAJAA,EAAEM,iBACwB/B,EAASgC,MACjC,SAAAC,GAAO,OAAIA,EAAQnB,KAAKD,gBAAkBC,EAAKD,iBAI/C,OADAe,IACOM,MAAM,GAAD,OAAIpB,EAAJ,iCAEdQ,EAASlD,EAAQM,WAAW,CAAEoC,OAAMK,YACpCS,KASA,UACE,wBAAOtB,UAAWC,IAAE4B,MAApB,iBAEE,uBACEC,SAAUZ,EACVG,MAAOb,EACPR,UAAWC,IAAE8B,MACbC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOnC,UAAWC,IAAE4B,MAApB,kBAEE,uBACER,MAAOR,EACPb,UAAWC,IAAE8B,MACbD,SAAUZ,EACVc,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQnC,UAAWC,IAAEmC,OAAQJ,KAAK,SAAlC,SACE,sBAAMhC,UAAWC,IAAEoC,QAAnB,gC,qBCnEO,SAASC,IACtB,IAAM9D,EAASuC,YAAYX,GACrBY,EAAWC,cAIjB,OACE,wBAAOjB,UAAWC,IAAEsC,KAApB,kCAEE,uBACEvC,UAAWC,IAAEoB,MACbW,KAAK,OACLX,MAAO7C,EACPsD,SAVgB,SAAAX,GACpBH,EAASlD,EAAQE,aAAamD,EAAEqB,cAAcnB,c,sCCTnC,SAASoB,EAAT,GAAoC,IAAjBjC,EAAgB,EAAhBA,KAAMK,EAAU,EAAVA,OACtC,OACE,qCACE,uBAAMb,UAAWC,IAAEO,KAAnB,UAA0BA,EAA1B,OACA,sBAAMR,UAAWC,IAAEY,OAAnB,SAA4BA,OAIlC4B,EAAQC,SAAW,CACjBlC,KAAMmC,IAAUC,OAAOC,WACvBhC,OAAQ8B,IAAU9B,OAAOgC,Y,0BCR3BC,IAAMC,SAASC,QAAU,uDAClB,I,iBCIQ,SAASC,KACtB,IAAMvD,EAAWqB,YAAYV,GACvBW,EAAWC,cAEjB,OACE,6BACGvB,EAASwD,KAAI,gBAAG1C,EAAH,EAAGA,KAAMK,EAAT,EAASA,OAAQpC,EAAjB,EAAiBA,GAAjB,OACZ,qBAAIuB,UAAWC,IAAEkD,KAAjB,UACE,cAACV,EAAD,CAASjC,KAAMA,EAAMK,OAAQA,IAC7B,wBACEb,UAAWC,IAAEmC,OACbJ,KAAK,SACLoB,QAAS,kBAAMpC,EDAE,SAAAvC,GAAE,OAAI,SAAAuC,GACjCA,EAASlD,EAAQF,wBACjBkF,IACGO,OADH,oBACuB5E,IACpB6E,MAAK,kBAAMtC,EAASlD,EAAQD,qBAAqBY,OACjD8E,OAAM,SAAAC,GAAK,OAAIxC,EAASlD,EAAQC,mBAAmByF,QCLpBjF,CAAcE,KAHxC,sBAF0BA,Q,wBCRpCgF,QAAQC,KFH2B,SAAA1C,GACjCA,EAASlD,EAAQT,uBACjByF,IACGa,IAAI,aACJL,MAAK,SAAAM,GAAQ,OAAI5C,EAASlD,EAAQP,oBAAoBqG,EAASC,UAC/DN,OAAM,SAAAC,GAAK,OAAIxC,EAASlD,EAAQN,kBAAkBgG,UEkBxCM,OAnBf,WACE,OACE,eAAChE,EAAD,WACE,oBAAIE,UAAWC,KAAEiC,MAAjB,uBACA,cAACxB,EAAD,IACA,cAAC4B,EAAD,IACA,oBAAItC,UAAWC,KAAE8D,aAAjB,sBACA,cAAC,GAAD,QCPNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3E,MAAOA,EAAjB,SAEE,cAAC,GAAD,QAIJ4E,SAASC,eAAe,W","file":"static/js/main.bb427095.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1Obk-\",\"value\":\"Filter_value__24yaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__2hTXa\",\"number\":\"Contact_number__3hNFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2AFkj\",\"button\":\"ContactsList_button__13Nw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2sPC8\",\"contactTitle\":\"App_contactTitle__1oZu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__17Yx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DA4Qu\",\"label\":\"Form_label__1kOjS\",\"input\":\"Form_input__1HyLK\",\"button\":\"Form_button__3SYCO\",\"btnText\":\"Form_btnText__Vt8Hc\"};","import { v4 as uuidv4 } from 'uuid';\r\n\r\n//reduxjs/toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\n// const addContact = createAction('contacts/Add', ({ name, number }) => ({\r\n//   payload: {\r\n//     name,\r\n//     number,\r\n//     id: uuidv4(),\r\n//   },\r\n// }));\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nconst deleteContactError = createAction('contacts/deleteError');\r\n\r\n// const deleteContact = createAction('contacts/Delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './phonebook-actions';\r\nimport initialContacts from '../../contacts.json';\r\n// import { SUBMIT, DELETE, CHANGE_FILTER } from './phonebook-types';\r\n\r\n// const contacts = (state = initialContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case SUBMIT:\r\n//       console.log(type, payload);\r\n//       return state.some(\r\n//         el => el.name.toLowerCase() === payload.name.toLowerCase(),\r\n//       )\r\n//         ? alert(`${payload.name} is already in the directory.`)\r\n//         : [...state, payload];\r\n\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n//reduxjs/Toolkit\r\n\r\nconst contactItems = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contactItems, filter });\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phonebookReducer from './Phonebook/phonebook-reduser';\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//хранилище с toolkit\r\n\r\n// const rootReducer = combineReducers({ phonebook: phonebookReducer });\r\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","export const getContacts = state => state.contacts.contactItems;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getFiltredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport actions from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://618fa5fff6bf450017484991.mockapi.io/contacts';\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(response => dispatch(actions.fetchContactSuccess(response.data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n  //   const data = 'baseURL';\r\n  //   return data;\r\n};\r\nexport const addContact = (name, number) => dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', { id: uuidv4(), name, number })\r\n    .then(response => dispatch(actions.addContactSuccess(response.data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n","// import PropTypes from 'prop-types';\n// import { useEffect } from 'react';\n\nimport Contact from '../Contact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { deleteContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n// ContactsList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","// import { connect } from 'react-redux';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n// import actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './App.module.css';\nimport { fetchContacts } from '../../redux/Phonebook/phonebook-operations';\nconsole.log(fetchContacts());\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state,\n//   };\n// };\n// const mapDispatchToProps = dispatch => ({\n//   addNote: text => dispatch(actions.addContact(text)),\n// });\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n// import store from './redux/store';\r\n// import { store, persistor } from './redux/store';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}