{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reduser.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","services/ApiContacts.js","redux/Phonebook/phonebook-operations.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactItems","createReducer","state","action","payload","filter","contact","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","lowerCasedFilter","toLowerCase","name","includes","axios","defaults","baseURL","fetchAllContacts","a","get","then","data","addContactApi","method","url","deleteContactApi","contactId","delete","deleteContact","fetchContacts","createAsyncThunk","addContact","number","newContact","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","useEffect","map","item","onClick","App","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00ca7b79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1Obk-\",\"value\":\"Filter_value__24yaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__2hTXa\",\"number\":\"Contact_number__3hNFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2AFkj\",\"button\":\"ContactsList_button__13Nw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2sPC8\",\"contactTitle\":\"App_contactTitle__1oZu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__17Yx5\"};","// import { v4 as uuidv4 } from 'uuid';\r\n\r\n//reduxjs/toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\n// const deleteContact = createAction('contacts/Delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n// import initialContacts from '../../contacts.json';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\n//reduxjs/Toolkit\r\n\r\nconst contactItems = createReducer([], {\r\n  [fetchContactSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, action) => action.payload.filter,\r\n});\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ contactItems, filter, loading });\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phonebookReducer from './Phonebook/phonebook-reduser';\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//хранилище с toolkit\r\n\r\n// const rootReducer = combineReducers({ phonebook: phonebookReducer });\r\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","export const getContacts = state => state.contacts.contactItems;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFiltredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://618fa5fff6bf450017484991.mockapi.io';\r\n\r\nexport const fetchAllContacts = async () => {\r\n  const data = await axios.get('/contacts').then(({ data }) => {\r\n    return data;\r\n  });\r\n  return data;\r\n};\r\nexport const addContactApi = async contact => {\r\n  const data = await axios({\r\n    method: 'post',\r\n    url: '/contacts',\r\n    data: contact,\r\n  }).then(({ data }) => data);\r\n  return data;\r\n};\r\n\r\nexport const deleteContactApi = async contactId => {\r\n  const deleteContact = await axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => data.id);\r\n  return deleteContact;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAllContacts,\r\n  addContactApi,\r\n  deleteContactApi,\r\n} from '../../services/ApiContacts';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const contacts = await fetchAllContacts();\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }) => {\r\n    const newContact = await addContactApi({ name, number });\r\n    return newContact;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContactApi',\r\n  async contactId => {\r\n    const deleteContact = await deleteContactApi(contactId);\r\n    return deleteContact;\r\n  },\r\n);\r\n","import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    // const contact = {\n    //   id: uuidv4(),\n    //   name,\n    //   number,\n    // };\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n// ContactsList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","// import { connect } from 'react-redux';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n// import actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state,\n//   };\n// };\n// const mapDispatchToProps = dispatch => ({\n//   addNote: text => dispatch(actions.addContact(text)),\n// });\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n// import store from './redux/store';\r\n// import { store, persistor } from './redux/store';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DA4Qu\",\"label\":\"Form_label__1kOjS\",\"input\":\"Form_input__1HyLK\",\"button\":\"Form_button__3SYCO\",\"btnText\":\"Form_btnText__Vt8Hc\"};"],"sourceRoot":""}